name: Product deploy

on:
  push:
    branches: [ master ]
    paths:
      - 'product-service/**'
  pull_request:
    branches: [ master ]
  workflow_dispatch:
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        distribution: 'adopt'
        cache: maven
    - name: Product  Build with Maven
      run: mvn -B package --file ./pom.xml
    - name: Upload a Product Artifact
      uses: actions/upload-artifact@v2
      with:
        name: product-artifact
        path: |
          ./target/*.jar
        if-no-files-found: error
        retention-days: 3
  product-docker-image:
    runs-on: ubuntu-latest
    name: Product Docker build
    needs: [build]
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: product-artifact
          path: ./target

      - name: Display downloaded artifacts
        run: ls -R
        working-directory: ./target

      - name: Docker build
        run: docker build -t ${{ secrets.REGISTRY_USERNAME }}/product-service:0.0.1 -f ./Dockerfile .

      - name: Docker Login
        uses: docker/login-action@v1.10.0
        with:
          registry: docker.io       # Server address of Docker registry. If not set then will default to Docker Hub
          username: ${{ secrets.REGISTRY_USERNAME }}    # Username used to log against the Docker registry
          password: ${{ secrets.REGISTRY_PASSWORD }}        # Password or personal access token used to log against the Docker registry

      - name: Docker Push
        run: docker push ${{ secrets.REGISTRY_USERNAME }}/product-service:0.0.1

  deploy-product:
    runs-on: ubuntu-latest
    name: Product Kyma Deployment
    needs: [product-docker-image]
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Kubernetes set context
        uses: Azure/k8s-set-context@v1.1
        with:
          cluster-type: generic
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}

      - name: Deploy to Kyma
        run: |
          #sed -i'' -e 's/:v1.2.0/:${{ github.sha }}/g' product-service/product-deployment-kyma.yaml
          kubectl delete -f ./k8s/deployment-kyma.yaml -n perf-test
          sleep 5s
          kubectl apply -f ./k8s/deployment-kyma.yaml -n perf-test
          sleep 150s
  k6_smoke_test:
    name: Smoke Test using k6
    runs-on: ubuntu-latest
    needs: [deploy-product]
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Run local k6 test
        uses: k6io/action@v0.1
        with:
          flags: --out influxdb=https://influxdb.c-1da60bd.kyma.ondemand.com/k6db
          filename: ./perf-test/k6-template/TEMPLATE.js
        env:
           K6_HOSTENV: qa
           K6_TEST_TYPE: smoke
  k6_load_test:
    name: Load Test using k6
    runs-on: ubuntu-latest
    needs: [k6_smoke_test]
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Run local k6 test
        uses: k6io/action@v0.1
        with:
          flags: --out influxdb=https://influxdb.c-1da60bd.kyma.ondemand.com/k6db
          filename: ./perf-test/k6-template/TEMPLATE.js
        env:
           K6_HOSTENV: qa
           K6_TEST_TYPE: load
